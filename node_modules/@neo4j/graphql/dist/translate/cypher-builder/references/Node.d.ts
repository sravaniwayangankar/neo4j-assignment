import { CypherContext } from "../CypherContext";
import { Param } from "./Param";
import { CypherVariable } from "./References";
declare type NodeInput = {
    labels?: Array<string>;
    parameters?: Record<string, Param<any>>;
};
export declare class Node implements CypherVariable {
    readonly prefix = "this";
    private labels;
    private parameters;
    constructor(input: NodeInput);
    getCypher(context: CypherContext): string;
    getReference(context: CypherContext): string;
    private hasParameters;
    private getLabelsString;
}
export declare class NamedNode extends Node {
    private name;
    constructor(name: string, input?: NodeInput);
    getReference(_context: CypherContext): string;
}
export {};
//# sourceMappingURL=Node.d.ts.map