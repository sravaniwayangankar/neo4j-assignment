import { CypherContext } from "../CypherContext";
import { Node } from "./Node";
import { Param } from "./Param";
import { CypherVariable } from "./References";
export declare type RelationshipInput = {
    source: Node;
    target: Node;
    type?: string;
    parameters?: Record<string, Param<any>>;
    directed?: boolean;
};
export declare class Relationship implements CypherVariable {
    readonly prefix: string;
    readonly source: Node;
    readonly target: Node;
    private type?;
    private parameters;
    private directed;
    constructor(input: RelationshipInput);
    getCypher(context: CypherContext): string;
    private hasParameters;
    private getRelationshipArrow;
    private getTypeString;
}
//# sourceMappingURL=Relationship.d.ts.map