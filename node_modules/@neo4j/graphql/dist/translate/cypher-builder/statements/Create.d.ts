import { CypherContext } from "../CypherContext";
import { Node } from "../references/Node";
import { Param } from "../references/Param";
import { Query } from "./Query";
declare type Params = Record<string, Param<any>>;
export declare class Create extends Query {
    private node;
    private params;
    constructor(node: Node, params: Params, parent?: Query);
    cypher(context: CypherContext, childrenCypher: string): string;
    return(...args: ReturnStatementArgs): this;
    private composeSet;
}
declare type ReturnStatementArgs = [Node, Array<string>?, string?];
export {};
//# sourceMappingURL=Create.d.ts.map